#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: WRT-CORE

on:
  workflow_call:
    inputs:
      TARGET:
        required: true
        type: string
      REPO_SOURCE:
        required: true
        type: string
      REPO_URL:
        required: true
        type: string
      REPO_BRANCH:
        required: true
        type: string
      FEEDS_CONF:
        required: true
        type: string
      CONFIG_FILE:
        required: true
        type: string
      DIY_P1_SH:
        required: true
        type: string
      DIY_P2_SH:
        required: true
        type: string
      PRE_INSTALL_SH:
        required: true
        type: string

env:
  TARGET: ${{inputs.TARGET}}
  REPO_SOURCE: ${{inputs.REPO_SOURCE}}
  REPO_URL: ${{inputs.REPO_URL}}
  REPO_BRANCH: ${{inputs.REPO_BRANCH}}
  FEEDS_CONF: ${{inputs.FEEDS_CONF}}
  CONFIG_FILE: ${{inputs.CONFIG_FILE}}
  DIY_P1_SH: ${{inputs.DIY_P1_SH}}
  DIY_P2_SH: ${{inputs.DIY_P2_SH}}
  PRE_INSTALL_SH: ${{inputs.PRE_INSTALL_SH}}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: true

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
          sudo timedatectl set-timezone "$TZ"
          git config --global user.email "imxudaye@qq.com"
          git config --global user.name "xhixx"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          cd openwrt
          echo "WRT_HASH=$(git log -1 --pretty=format:'%h')" >> $GITHUB_ENV
          echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV

      - name: Cache
        uses: stupidloud/cachewrtbuild@main
        with:
          ccache: true
          mixkey: ${{env.TARGET}}-${{env.REPO_SOURCE}}-${{env.REPO_BRANCH}}-${{env.WRT_HASH}}
          prefix: ${{ env.OPENWRT_PATH }}

      - name: Load custom feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          if [ -e "$DIY_P1_SH" ]; then
          chmod +x "$DIY_P1_SH"
          cd openwrt
          "$GITHUB_WORKSPACE/$DIY_P1_SH"
          fi

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Modify feeds
        run: |
          if [ -e "$PRE_INSTALL_SH" ]; then
          chmod +x $PRE_INSTALL_SH
          cd openwrt
          $GITHUB_WORKSPACE/$PRE_INSTALL_SH
          fi          

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          if [ -e "$DIY_P2_SH" ]; then          
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH
          fi  


      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make package/lucky/lucky/compile V=s
          make package/lucky/luci-app-lucky/compile V=s
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV


      - name: Organize files
        id: organize
        if: steps.compile.outputs.status == 'success'  && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Release Firmware
        uses: softprops/action-gh-release@master
        if: steps.compile.outputs.status == 'success'  && !cancelled()
        with:
          tag_name: ${{env.TARGET}}_${{env.FILE_DATE}}
          files: ${{ env.FIRMWARE }}/*
          body: |
            适用于兆能M2的无wifi固件。
            
            源码：${{env.REPO_URL}}
            分支：${{env.REPO_BRANCH}}
            平台：${{env.TARGET}}
